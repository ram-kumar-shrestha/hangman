import { useFormik } from "formik";
import React, { useEffect, useState } from "react";
import { connect } from "react-redux";
import { Link, useParams } from "react-router-dom";

import { FormGroup, FormLayout, Info } from "../../components";
import { AddOutletValidate } from "../../helpers";
import { useLocalStorage } from "../../hooks/useLocalStorage";
import {
  getAllDropdownOwners,
  getSingleOutlet,
  editOutlet,
} from "../../store/action";

const add_outlet = (
  <svg
    data-name="Layer 1"
    height="100%"
    width="100%"
    viewBox="0 0 751.12795 558.07425"
    version="1.1"
    id="svg82"
  >
    <defs id="defs86" />

    <path
      d="m 379.83167,530.38803 a 3.61324,3.61324 0 0 1 -2.61866,-6.26263 c 0.0911,-0.36212 0.15647,-0.62216 0.24758,-0.98429 a 9.70742,9.70742 0 0 0 -17.99686,-0.16974 c -4.28226,10.02341 -9.82453,20.4 -7.06825,31.44012 -18.206,-38.58538 -12.01459,-86.582 14.89138,-119.57967 7.43714,-4.09684 13.46508,-11.37558 15.03439,-19.82719 -3.6807,1.24714 -8.26984,-1.74675 -5.50237,-5.62382 1.19955,-1.48179 2.41075,-2.95192 3.6102,-4.4338 -13.98172,-14.89039 -30.6407,8.512 -15.25087,28.60947 a 115.847,115.847 0 0 0 -13.01133,20.35185 48.70929,48.70929 0 0 0 -2.908,-22.62447 c -2.78346,-6.71479 -8.00064,-12.37 -12.595,-18.17495 -5.58607,-7.07309 -17.083,-3.80994 -17.83469,5.16592 5.15526,1.69443 5.825,9.14117 -0.072,10.16037 1.54456,16.69795 12.45345,32.04321 27.47828,39.36634 a 116.2988,116.2988 0 0 0 -6.35538,48.61141 c -2.65207,-19.25 -23.3157,-23.92148 -37.7586,-31.57247 a 5.626,5.626 0 0 0 -8.5801,5.69851 32.49508,32.49508 0 0 1 5.69583,3.00488 4.91123,4.91123 0 0 1 -2.28162,8.96546 c 7.28014,18.018 26.10227,30.11727 45.43371,30.04916 a 119.56344,119.56344 0 0 0 8.03167,23.447 h 28.69167 c 0.10291,-0.3188 0.19543,-0.64792 0.288,-0.96672 a 32.59928,32.59928 0 0 1 -7.93916,-0.473 c 7.02637,-8.31909 12.46032,-12.56337 8.371,-24.17721 z"
      fill="#f2f2f2"
      id="path2"
      style={{ fill: "#008080" }}
    />
    <path
      d="M 530.90535,16.15137 H 283.11677 a 8.075685,8.075685 0 0 1 0,-16.15137 h 247.78858 a 8.075685,8.075685 0 0 1 0,16.15137 z"
      fill="#e6e6e6"
      id="path4"
    />
    <path
      d="M 530.90535,59.15137 H 283.11677 a 8.075685,8.075685 0 0 1 0,-16.15137 h 247.78858 a 8.075685,8.075685 0 0 1 0,16.15137 z"
      fill="#e6e6e6"
      id="path6"
    />
    <path
      d="m 541.73072,318.92964 -108.01627,2.7883 a 8.5095,8.5095 0 0 1 -8.71651,-8.27782 l -1.3878,-53.76188 a 8.50951,8.50951 0 0 1 8.27783,-8.71651 l 108.01627,-2.78831 a 8.50952,8.50952 0 0 1 8.71652,8.27783 l 1.38778,53.76188 a 8.5095,8.5095 0 0 1 -8.27782,8.71651 z"
      fill="#ffffff"
      id="path8"
    />
    <path
      d="m 541.75655,319.92927 -108.01626,2.7883 a 9.5108,9.5108 0 0 1 -9.742,-9.25169 l -1.3878,-53.76187 a 9.51081,9.51081 0 0 1 9.25169,-9.742 l 108.01626,-2.7883 a 9.51081,9.51081 0 0 1 9.742,9.25168 l 1.38779,53.76188 a 9.51081,9.51081 0 0 1 -9.25168,9.742 z M 431.91381,251.96135 a 7.50821,7.50821 0 0 0 -7.304,7.69105 l 1.3878,53.76187 a 7.50821,7.50821 0 0 0 7.691,7.304 l 108.01633,-2.78834 a 7.5082,7.5082 0 0 0 7.304,-7.691 l -1.3878,-53.76187 a 7.5082,7.5082 0 0 0 -7.691,-7.304 z"
      fill="#cccccc"
      id="path10"
    />
    <path
      d="m 475.68811,304.37782 a 3.63319,3.63319 0 0 1 -1.764,-0.41114 3.586,3.586 0 0 1 -1.9652,-3.13456 L 471.1844,270.8283 a 3.63311,3.63311 0 0 1 5.50018,-3.20974 l 28.84895,14.2672 a 3.63333,3.63333 0 0 1 0.15827,6.13145 l -28.0744,15.73662 a 3.61588,3.61588 0 0 1 -1.92929,0.62399 z"
      fill="#6c63ff"
      id="path12"
      style={{ fill: "#6cafb5", fillOpacity: "1" }}
    />
    <circle cx="407.01105" cy="146.00549" r="47" fill="#e6e6e6" id="circle14" />
    <path
      d="m 407.01106,171.28919 a 2.0001,2.0001 0 0 1 -2,-2 V 123.0055 a 2,2 0 1 1 4,0 v 46.28369 a 2.0001,2.0001 0 0 1 -2,2 z"
      fill="#ffffff"
      id="path16"
    />
    <path
      d="m 430.15266,148.14713 h -46.2832 a 2,2 0 0 1 0,-4 h 46.2832 a 2,2 0 0 1 0,4 z"
      fill="#ffffff"
      id="path18"
    />
    <path
      d="m 234.01106,298.0055 h -80 v -90 h 80 c -8.73718,11.7471 -4.4137,50.77929 0,90 z"
      fill="#ffb6b6"
      id="path20"
    />
    <polygon
      points="255.729,472.114 234.475,472.115 234.478,527.659 248.878,527.659 "
      fill="#ffb6b6"
      id="polygon22"
      transform="translate(-0.00344063)"
    />
    <path
      d="m 253.66672,528.95551 v -9.76238 l -3.78573,0.23128 -15.41045,0.91294 -3.56655,0.2191 -2.72665,32.6956 -0.14606,1.75285 h 10.22496 l 0.32869,-1.74067 1.485,-7.91217 3.83439,7.91217 0.83991,1.74067 h 27.10835 a 6.12512,6.12512 0 0 0 6.08628,-6.09847 c 1.1442,-5.34383 -21.39943,-16.89559 -24.27214,-19.95092 z"
      fill="#2f2e41"
      id="path24"
    />
    <polygon
      points="111.665,474.162 93.18,463.674 65.771,511.985 78.296,519.091 "
      fill="#ffb6b6"
      id="polygon26"
      transform="translate(-0.00344063)"
    />
    <path
      d="m 81.826419,522.57713 4.80818,-8.48432 -3.38394,-1.66764 -13.86458,-6.80443 -3.21357,-1.58242 -15.7878,23.11571 -3.71269,5.42892 4.19955,2.38585 4.68649,2.6658 6.354,-7.49827 -0.706,10.69966 22.14192,12.57429 h 0.0122 l 1.42424,0.80336 a 6.09621,6.09621 0 0 0 8.30163,-2.30063 c 3.62749,-4.09001 -10.27365,-25.24595 -11.25962,-29.33588 z"
      fill="#2f2e41"
      id="path28"
    />
    <path
      d="m 151.01106,255.0055 c -19.29694,12.78723 -26.39972,135.64019 -21.38629,133.63452 l -45.483271,84.76473 64.738841,29.01978 42.5669,-147.80184 7.09449,54.39108 -9.45932,86.31627 41.84612,10.11978 28.944,-2.06743 c -7.521,-102.88745 -14.2992,-211.40192 -29.86145,-253.37689 z"
      fill="#2f2e41"
      id="path30"
    />
    <path
      d="m 210.96151,109.16563 c 0,0 -21.42338,-2.771 -27.95045,-0.16013 -2.32234,0.92894 -4.64479,9.45919 -9,12 -7.88537,4.60028 -14.32031,3.82513 -14.32031,3.82513 3.08014,39.21863 2.91259,69.64233 -15.51526,126.45349 a 8.39819,8.39819 0 0 0 12.129,7.62433 l 75.70655,-5.903 8.975,-47.2391 11.74872,-24.803 -15.22165,-31.33 -1.30536,-18.27581 -19.1967,-9.35215 z"
      fill="#6c63ff"
      id="path32"
      style={{ fill: "#478498", fillOpacity: "1" }}
    />
    <path
      id="a2192116-6b97-466f-8b13-d9817c84884d-369"
      data-name="Path 9"
      d="m 220.41934,100.49577 0.0232,0.002 a 4.6613,4.6613 0 0 0 5.04509,-4.24293 l 2.25461,-25.91523 A 34.76347,34.76347 0 0 0 226.18604,56.58572 35.32419,35.32419 0 0 0 209.3128,36.39046 34.78365,34.78365 0 0 0 195.95155,32.40098 c -19.13564,-1.69508 -26.09778,2.33417 -37.71734,31.57893 -11.61956,29.24476 -2.25809,25.95476 -2.25809,25.95476 a 4.669,4.669 0 0 0 0.20969,1.85022 4.74541,4.74541 0 0 0 2.27324,2.71286 4.68443,4.68443 0 0 0 1.78658,0.53288 c 22.6463,5.59676 45.49889,11.49457 60.17757,5.46548 z"
      fill="#2f2e41"
    />
    <path
      id="ed28a24e-420e-40bb-8d99-8be0d936d38f-370"
      data-name="Ellipse 1"
      d="M 178.04955,57.06118 A 25.642,25.642 0 0 0 204.38731,96.4287 25.3433,25.3433 0 0 0 220.63292,85.583 25.642,25.642 0 0 0 194.31454,46.22687 25.34327,25.34327 0 0 0 178.04946,57.06213 Z"
      fill="#ffb6b6"
    />
    <path
      id="aaaefc33-4d64-40b9-9ad5-5bc57b25f5f9-371"
      data-name="Path 10"
      d="m 235.77824,73.16377 a 27.5,27.5 0 0 0 -1.231,-10.87771 c -0.31483,-8.59467 -2.86059,-16.36439 -13.3432,-15.968 a 27.51218,27.51218 0 0 0 -10.497,-3.145 l -5.18464,-0.47727 q -0.0873,-0.008 -0.17473,-0.0157 a 27.45354,27.45354 0 0 0 -29.71434,24.989 l -0.0452,0.51908 10.969,0.999 4.65079,-10.12729 -0.16288,10.53811 5.66528,0.51812 2.3454,-5.10945 -0.0809,5.31325 c 8.45529,7.34776 21.20486,7.65128 36.75338,3.36351 z"
      fill="#2f2e41"
    />
    <path
      id="a25eee40-fd94-4a6a-9f0d-d3f65b8e441c-372"
      data-name="Path 13"
      d="m 200.87724,97.97276 a 4.587,4.587 0 0 1 -0.41086,2.49195 4.69116,4.69116 0 0 1 -0.71262,1.09753 4.745,4.745 0 0 1 -0.82983,0.74967 4.65344,4.65344 0 0 1 -3.10764,0.83289 q -0.103,-0.01 -0.20559,-0.0237 -0.10259,-0.0138 -0.20483,-0.0324 -0.10326,-0.0177 -0.205,-0.0411 -0.10174,-0.0234 -0.2042,-0.0508 l -3.83293,-1.04666 -4.36707,-11.9268 -0.91326,10.49708 -17.429,-4.72811 3.87536,-44.54522 29.67124,2.725 -0.808,0.78845 a 20.49342,20.49342 0 0 0 -5.49662,9.64421 33.40639,33.40639 0 0 0 -0.7711,11.33909 60.24258,60.24258 0 0 0 2.19883,11.33063 88.78607,88.78607 0 0 0 3.41569,9.6346 4.68461,4.68461 0 0 1 0.33743,1.26365 z"
      fill="#2f2e41"
    />
    <path
      d="M 150.26703,402.33579 128.47292,271.27258 a 10.15441,10.15441 0 0 1 8.34175,-11.66933 l 98.98182,-16.4594 a 10.1544,10.1544 0 0 1 11.66928,8.34176 l 21.79411,131.06321 a 10.15441,10.15441 0 0 1 -8.34164,11.66931 l -98.98182,16.45939 a 10.15442,10.15442 0 0 1 -11.66939,-8.34173 z"
      fill="#e6e6e6"
      id="path38"
    />
    <path
      d="m 151.27682,361.48668 -14.01123,-84.25932 a 9.50973,9.50973 0 0 1 7.8123,-10.92869 l 85.06653,-14.14546 a 9.51014,9.51014 0 0 1 10.92916,7.81222 l 19.3938,116.62843 a 9.51014,9.51014 0 0 1 -7.81278,10.92876 l -52.69695,8.76282 a 42.36082,42.36082 0 0 1 -48.68083,-34.79876 z"
      fill="#ffffff"
      id="path40"
    />
    <path
      d="m 154.94832,298.4469 a 9.29268,9.29268 0 0 1 7.63414,-10.67945 l 59.01049,-9.81268 a 9.28254,9.28254 0 0 1 3.04531,18.3136 l -59.01048,9.81267 a 9.29267,9.29267 0 0 1 -10.67946,-7.63414 z"
      fill="#6c63ff"
      id="path42"
      style={{ fill: "#6cafb5", fillOpacity: "1" }}
    />
    <path
      d="m 159.68547,326.93472 a 9.29268,9.29268 0 0 1 7.63415,-10.67945 l 59.01048,-9.81268 a 9.28254,9.28254 0 0 1 3.04532,18.3136 l -59.01049,9.81267 a 9.29268,9.29268 0 0 1 -10.67946,-7.63414 z"
      fill="#6c63ff"
      id="path44"
      style={{ fill: "#6cafb5", fillOpacity: "1" }}
    />
    <path
      d="m 164.42263,355.42254 a 9.29268,9.29268 0 0 1 7.63414,-10.67945 l 59.01049,-9.81268 a 9.28254,9.28254 0 0 1 3.04531,18.3136 l -59.01048,9.81267 a 9.29267,9.29267 0 0 1 -10.67946,-7.63414 z"
      fill="#6c63ff"
      id="path46"
      style={{ fill: "#6cafb5", fillOpacity: "1" }}
    />
    <path
      d="m 138.49524,284.95226 a 10.5487,10.5487 0 0 0 -1.65427,-15.98 l 10.38747,-51.54129 -13.54987,-6.37824 -11.88977,61.30658 a 10.53391,10.53391 0 0 0 16.70644,12.593 z"
      fill="#ffb6b6"
      id="path48"
    />
    <path
      d="m 160.01106,125.0055 c 0,0 -23.81777,8.963 -25.12319,22.01715 -1.30542,13.05415 -4.30542,24.68952 -3,29.9112 1.30542,5.22168 -4.48765,11.15539 -1.87681,15.07165 2.61084,3.91626 -3.65026,5.20417 -1.03945,11.73123 2.61081,6.52706 3.91623,7.83249 2.61084,9.13791 -1.30539,1.30542 -5.57139,28.13086 -5.57139,28.13086 l 18.54173,4.11536 24.192,-55.01947 z"
      fill="#6c63ff"
      id="path50"
      style={{ fill: "#478498", fillOpacity: "1" }}
    />
    <path
      d="m 246.52685,284.95226 a 10.54869,10.54869 0 0 1 1.65427,-15.98 l -10.38747,-51.54129 13.54987,-6.37824 11.88977,61.30658 a 10.53391,10.53391 0 0 1 -16.70644,12.593 z"
      fill="#ffb6b6"
      id="path52"
    />
    <path
      d="m 230.98605,130.05226 a 13.912,13.912 0 0 1 11.74875,7.83248 c 3.91623,7.83249 18.58168,57.20453 17.27626,61.12076 -1.30542,3.91623 4.61036,16.56366 1.99952,19.1745 -2.61084,2.61084 -4.99952,17.8255 -4.99952,17.8255 l -19.02507,4.36655 -6.13791,-58.10324 z"
      fill="#6c63ff"
      id="path54"
      style={{ fill: "#478498", fillOpacity: "1" }}
    />
    <path
      d="m 680.46638,308.84335 a 9.099,9.099 0 0 1 7.71423,-11.6257 l 7.14192,-31.53623 11.63778,12.12018 -8.56625,28.08921 a 9.14832,9.14832 0 0 1 -17.92762,2.95253 z"
      fill="#a0616a"
      id="path56"
    />
    <path
      d="m 697.62695,114.5568 0.57228,2.71047 29.81183,91.2015 -20.053,81.27312 -16.4135,-7.67476 3.86957,-72.0569 c -29.45767,-39.33126 -38.12195,-53.5672 -35.55335,-94.5029 z"
      fill="#e6e6e6"
      id="path58"
    />
    <polygon
      points="650.583,484.968 672.228,484.97 672.225,541.537 657.56,541.536 "
      fill="#a0616a"
      id="polygon60"
      transform="translate(-0.00344063)"
    />
    <path
      d="m 672.73799,556.83547 -45.0978,-0.002 v -0.57033 a 17.55428,17.55428 0 0 1 17.55332,-17.553 h 0.001 l 8.23769,-6.24954 15.36971,6.25049 3.93674,1.4e-4 z"
      fill="#2f2e41"
      id="path62"
    />
    <polygon
      points="569.989,484.968 591.634,484.97 591.631,541.537 576.966,541.536 "
      fill="#a0616a"
      id="polygon64"
      transform="translate(-0.00344063)"
    />
    <path
      d="m 592.14401,556.83547 -45.0978,-0.002 v -0.57033 a 17.55428,17.55428 0 0 1 17.55332,-17.553 h 0.001 l 8.23769,-6.24954 15.36972,6.25049 3.93674,1.4e-4 z"
      fill="#2f2e41"
      id="path66"
    />
    <path
      d="m 690.05657,282.06377 c 0,0 5.7849,13.73919 0,36.15574 -5.7849,22.41655 -7.23113,78.8195 -7.23113,78.8195 l -9.2731,126.65659 h -24.5286 l -0.90785,-91.22391 -12.293,-98.34358 -24.58586,93.28171 c 0,0 -9.40048,69.419 -13.01607,72.31144 -3.61559,2.89244 -5.26264,23.09832 -5.26264,23.09832 -7.43151,1.11355 -18.736,-1.79251 -25.40461,-5.25613 2.74816,-1.18829 14.39784,-232.07943 14.75873,-235.49969 1.41147,-13.37647 107.74413,10e-6 107.74413,10e-6 z"
      fill="#2f2e41"
      id="path68"
    />
    <path
      d="m 489.10262,257.77642 a 9.099,9.099 0 0 0 9.811,-9.92017 l 29.42086,-13.4147 -14.23624,-8.92558 -25.756,14.10716 a 9.14832,9.14832 0 0 0 0.76036,18.15321 z"
      fill="#a0616a"
      id="path70"
    />
    <path
      d="m 603.64424,145.89174 9.98956,3.86064 -27.99334,55.67025 -73.31314,40.40577 -5.497,-17.26518 55.563,-46.04264 c 19.43493,-56.54084 31.11263,-81.80356 45.13732,-81.45743 z"
      fill="#e6e6e6"
      id="path72"
    />
    <path
      d="m 594.72659,113.94375 a 20.595,20.595 0 0 1 21.10179,-14.992 q 0.11229,0.008 0.224,0.0162 c 6.24658,0.47467 14.24138,-14.68192 22.52144,-14.037 5.826,0.45377 11.79319,0.92394 17.392,1.37427 4.98932,0.40131 9.6861,16.55526 13.72968,16.89943 7.63819,0.65013 9.44155,1.15258 9.98742,1.33453 2.16935,0.72312 10.51383,1.29417 15.77,7.42632 2.353,2.74513 11.70841,28.7294 5.92352,56.20776 -5.78489,27.47836 -12.4032,63.07333 -12.4032,63.07333 0,0 5.78368,17.19236 2.8912,24.42352 -2.89248,7.23116 2.89248,12.293 2.89248,15.1854 0,2.8924 -1.44624,17.35475 -1.44624,17.35475 0,0 -103.01041,10.93292 -112.08272,0 -0.2976,-0.35864 12.03322,-60.294 6.928,-108.47619 -2.80248,-26.44944 2.42083,-51.22696 6.57063,-65.79028 z"
      fill="#e6e6e6"
      id="path74"
    />
    <circle
      cx="646.8252"
      cy="52.023891"
      r="29.759581"
      fill="#a0616a"
      id="circle76"
    />
    <path
      d="m 626.41869,17.66425 c 2.13287,-0.0634 1.4007,-4.08367 3.11909,-5.36616 q 0.0126,0.0583 0.026,0.11649 a 4.18843,4.18843 0 0 0 8.00415,0.34149 6.36568,6.36568 0 0 1 4.04172,-4.2401 c 0.107,3.72632 2.92567,6.96042 6.28827,8.56987 3.3626,1.60945 7.19667,1.87728 10.92418,1.93242 3.72751,0.0551 7.50867,-0.0697 11.12331,0.84244 3.61456,0.91211 7.13042,3.05669 8.67474,6.44968 1.54438,3.393 0.44249,8.06439 -2.93442,9.64354 2.616,0.0139 4.83585,2.17267 5.7404,4.62739 0.90448,2.45479 0.76649,5.15569 0.56722,7.76418 -0.73522,9.62316 -2.52772,19.98361 -9.535,26.62019 -5.34051,5.058 -12.98465,7.09559 -20.34013,7.06617 -7.35549,-0.0295 -6.06218,-0.70557 -13.17415,-2.58292 0,0 -6.76152,-19.38364 -5.05891,-21.29049 1.70261,-1.90677 3.11679,-4.34682 2.80865,-6.88454 -0.30814,-2.53772 -3.03534,-4.811 -5.4021,-3.845 0.398,-1.01734 0.69779,-1.21113 0.88558,-1.15948 a 8.99367,8.99367 0 0 1 -0.31273,-0.88432 10.06353,10.06353 0 0 0 -6.28494,-6.66466 7.80439,7.80439 0 0 0 -8.53015,2.58152 c -7.7875,-7.30357 -2.9561,-23.2717 9.36922,-23.63771 z"
      fill="#2f2e41"
      id="path78"
    />
    <path
      d="M 749.93724,557.76692 1.1872394,558.07426 a 1.19069,1.19069 0 0 1 0,-2.38137 L 749.93724,555.38556 a 1.19068,1.19068 0 1 1 0,2.38136 z"
      fill="#cacaca"
      id="path80"
    />
  </svg>
);

const AddOutlet = ({
  dropdown,
  outlet,
  getSingleOutlet,
  editOutlet,
  getAllDropdownOwners,
}) => {
  const [message, setMessage] = useState({});

  const [mappedOwner, setMappedOwner] = useState([]);
  const [backButton, setBackButton] = useState("");

  const { id } = useParams();
  const { centralKitchenId } = useLocalStorage();

  useEffect(() => {
    document.title = "Syanko Katti Roll - Edit an Outlet";

    getSingleOutlet(id);

    getAllDropdownOwners()
      .then(() => {})
      .catch((e) => console.log(e));
  }, [outlet.length, id]);

  const formik = useFormik({
    initialValues: {
      Name: outlet.name ? outlet.name : "",
      Address: outlet.address ? outlet.address : "",
      PhoneNo: outlet.phoneNo ? outlet.phoneNo : "",
      IsCustomPrice: outlet.isCustomPrice ? outlet.isCustomPrice : false,
      OwnerDetailId: outlet.ownerDetailId ? outlet.ownerDetailId : "",
      OrderLimit: outlet?.orderLimit,
    },
    enableReinitialize: true,
    validate: AddOutletValidate,
    onSubmit: (values) => {
      setBackButton(
        <Link
          to="../view-all-outlets"
          className="btn btn-outline-info w-45 mt-2"
        >
          View All Outlets
        </Link>
      );
      editOutlet(
        id,
        JSON.stringify({
          CentralKitchenId: centralKitchenId,
          OutletId: id,
          ...values,
        })
      )
        .then(() =>
          setMessage({
            desc: "Outlet edited successfully",
            type: "success",
          })
        )
        .catch((e) => {
          setMessage({
            desc: "Something went wrong.",
            type: "danger",
          });
          console.log(e);
        });
    },
  });
  return (
    <>
      <FormLayout
        formik={formik}
        svg={add_outlet}
        title="Edit an Outlet "
        type="edit"
      >
        {/* edit info */}
        <Info info={message} />

        {/* View All Items */}
        {backButton}

        <FormGroup
          inputMethod="input"
          id="Name"
          label="Name:"
          type="text"
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
          value={formik.values.Name}
          error={formik.errors.Name}
          touched={formik.touched.Name}
        />
        <FormGroup
          inputMethod="input"
          id="Address"
          label="Address:"
          type="text"
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
          value={formik.values.Address}
          error={formik.errors.Address}
          touched={formik.touched.Address}
        />
        <FormGroup
          inputMethod="input"
          id="PhoneNo"
          label="Contact:"
          type="text"
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
          value={formik.values.PhoneNo}
          error={formik.errors.PhoneNo}
          touched={formik.touched.PhoneNo}
        />
        <FormGroup
          inputMethod="input"
          id="OrderLimit"
          label="Max. Allowed Pending Bill:"
          type="number"
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
          value={formik.values.OrderLimit}
          error={formik.errors.OrderLimit}
          touched={formik.touched.OrderLimit}
        />

        {/* <FormGroup
          inputMethod="input"
          id="IsCustomPrice"
          styleProp="d-flex flex-nowrap justify-content-between align-items-center"
          label="Custom Price:"
          type="checkbox"
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
          value={formik.values.IsCustomPrice}
          error={formik.errors.IsCustomPrice}
          touched={formik.touched.IsCustomPrice}
        /> */}
        <FormGroup
          inputMethod="select"
          id="OwnerDetailId"
          label="Owner:"
          onChange={formik.handleChange}
          onBlur={formik.handleBlur}
          value={formik.values.OwnerDetailId}
          error={formik.errors.OwnerDetailId}
          touched={formik.touched.OwnerDetailId}
          options={dropdown.map(({ ownerDetailId, name }) => {
            return { name, ["id"]: ownerDetailId };
          })}
        />
      </FormLayout>
    </>
  );
};

const mapStateToProps = (state) => {
  return {
    dropdown: state.dropdown,
    outlet: state.singleOutlet,
  };
};

export default connect(mapStateToProps, {
  getAllDropdownOwners,
  editOutlet,
  getSingleOutlet,
})(AddOutlet);
